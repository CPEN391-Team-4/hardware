syntax = "proto3";

option go_package = "github.com/CPEN391-Team-4/backend";

package de1_client;

message User {
  string name = 1;
  bool restricted = 2;
  Photo Photo = 3;
}
message Photo {
  bytes image = 1;
  string fileExtension = 2;
}
message UserNames{
  repeated string usernames = 1;
}
message Empty {}
message FaceVerificationReq {
  Photo Photo = 1;
}
message FaceVerificationResp {
  string user = 1;
  float confidence = 2;
  bool accept = 3;
}


message HistoryRecord{
  string name = 1;
  string status = 2;
  Photo Photo = 3;
  string time = 4;
}



message Timestamp{
  string starttime = 1;
  string endtime = 2;
}

message Permission{
  string usernames = 1;  //could be none, if the user is not a truested user
  int64 userid = 2;     // used to update the recorded table status
  bool permit = 3;     //  if agree to access set to 1, rejected set to 0
}

service Route {
  rpc AddTrustedUser(stream User) returns (Empty) {}
  rpc UpdateTrustedUser(stream User) returns (Empty) {}
  rpc VerifyUserFace(stream FaceVerificationReq) returns (FaceVerificationResp) {}
  rpc RemoveTrustedUser(User) returns (Empty) {}
  rpc GetUserPhoto(User) returns (stream Photo) {}
  rpc GetAllUserNames(Empty) returns (UserNames) {}


  //history record and permission
  rpc  GetHistoryRecorded(Timestamp) returns (stream HistoryRecord){}

  //send permission
  rpc  GivePermission(Permission) returns (Empty){}
  
  //get the latest image when app gets the notification 
  rpc GetLatestImage(Empty) returns (stream Photo){}

}
